package sinius.rcm;

import java.io.File;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

import org.bukkit.Location;

import fileHandling.LFile;

public class Data {

	public List<RollerPoint> points = new ArrayList<RollerPoint>();
	LFile oldFile;
	File dir;
	
	public Data(){
		dir = new File(Main.getPlug().getDataFolder().getAbsolutePath());
		oldFile = new LFile(new File(dir.getAbsolutePath() + "//data.txt"));
	}
	
	private void addPointToFile(RollerPoint t){
		if(t.equals(null)){
			return;
		}
		String s = t.name + "," + t.type + "," + t.world + "," + t.x + "," + t.y + "," + t.z + "," + t.whatToSpawn;
		//			0				1				2				3			4			5			6
		oldFile.append(s);
	}
	
	void makeFile(){
		try {
			dir.mkdirs();
			oldFile.create();
		} catch (IOException e) {
			e.printStackTrace();
		}
		oldFile.append("##in this file is the data from the plugin RollercoasterManager stored.");
		oldFile.append("##Do not edit this file!");
		oldFile.append("##it will mess up the plugin");
	}
	
	void openFile(){
		if(oldFile.exist()){
			String[] s;
			try {
				s = oldFile.open(true);
				if(s.length <1){
					return;
				}
				for(int i = 0; i < s.length; i++){
					String[] t = s[i].split(",");
					points.add(new RollerPoint(t[3], t[4], t[5], t[2], t[0], t[1], t[6]));
				}			
			} catch (IOException e) {
				e.printStackTrace();
			}
		}
		
	}
	
	void saveFile(){
		oldFile.getFile().delete();
		this.makeFile();
		for(RollerPoint p : points){
			this.addPointToFile(p);
		}
	}
	
	public boolean addPoint(Location loc, String name, int type){
		for(RollerPoint p : points){
			if(p.name.equals(name)){
				return false;
			}
		}
		RollerPoint p = new RollerPoint((int)loc.getX(), (int)loc.getY(), (int)loc.getZ(), loc.getWorld().getName(), name, type, RollerPoint.CART_NORMAL);
		p.v = loc.getDirection();
		points.add(p);
		
		return true;
	}
	
	public boolean removePoint(String name){
		int i = 0;
		for(RollerPoint p : points){
			if(p.name.equals(name)){
				points.remove(i);
				return true;
			}
			i++;
		}
		return false;
	}
	
	public RollerPoint getPointByName(String name){
		for(RollerPoint p : points){
			if(p.name.equals(name)){
				return p;
			}
		}
		return new RollerPoint(0,0,0,"a","EMPTY",RollerPoint.EMPTY, 0);
	}
	
}
